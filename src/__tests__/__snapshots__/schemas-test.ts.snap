// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should handle arguments.graphql correctly 1`] = `
"export interface Query {
  field1: string | null
}

export interface field1Args {
  a?: String
  b?: Int
}
"
`;

exports[`should handle enum.graphql correctly 1`] = `
"export interface Query {
  state: STATE
  optionalState: STATE | null
}

export interface stateArgs {}

export interface optionalStateArgs {}

export type STATE = 'OPEN' | 'CLOSED' | 'DELETED'
"
`;

exports[`should handle interface.graphql correctly 1`] = `
"export interface Query {
  characters?: (Character | null)[] | null
}

export interface Human extends Character {
  __typename: 'Human'
  id: string
  name: string
  friends: (Character | null)[] | null
}

export interface Droid extends Character, Functional {
  __typename: 'Droid'
  id: string
  name: string
  primaryFunction: string | null
}

export interface charactersArgs {}

/**
 * A character
 */
export interface Character {
  id: string
  name: string
}
export interface Functional {
  primaryFunction: string | null
}
"
`;

exports[`should handle mutation.graphql correctly 1`] = `
"export interface Query {
  values: (KeyValue | null)[] | null
}

export interface KeyValue {
  key: string
  value: string | null
}

export interface Mutation {
  simpleMutation: (KeyValue | null)[] | null
  commandMutation: (KeyValue | null)[] | null
}

export interface valuesArgs {}

export interface simpleMutationArgs {
  key: ID
  value?: String
}

export interface commandMutationArgs {
  cmd?: any
}

/**
 * Set a key to a value
 */
export interface SetValueCommand {
  key: string
  value?: string
}
"
`;

exports[`should handle required.graphql correctly 1`] = `
"export interface Query {
  requiredStringField: string
  optionalStringField: string | null
  requiredIntField: number
  requiredObjectField: A
  requiredListOfOptionals: (string | null)[]
  optionalListOfOptionals: (string | null)[] | null
  requiredListOfRequired: string[]
  optionalListOfRequired: string[] | null
}

export interface A {
  name: string
}

export interface requiredStringFieldArgs {}

export interface optionalStringFieldArgs {}

export interface requiredIntFieldArgs {}

export interface requiredObjectFieldArgs {}

export interface requiredListOfOptionalsArgs {}

export interface optionalListOfOptionalsArgs {}

export interface requiredListOfRequiredArgs {}

export interface optionalListOfRequiredArgs {}
"
`;

exports[`should handle scalars.graphql correctly 1`] = `
"export interface Query {
  stringField: string | null
  booleanField: boolean | null
  intField: number | null
  floatField: number | null
  idField: string | null
}

export interface stringFieldArgs {}

export interface booleanFieldArgs {}

export interface intFieldArgs {}

export interface floatFieldArgs {}

export interface idFieldArgs {}
"
`;

exports[`should handle simpleSchema.graphql correctly 1`] = `
"export interface RootQuery {
  /**
     * A field description
     */
  field1: TypeA | null
  /**
     * Another field description
     */
  field2: TypeB | null
}

/**
 * A simple type
 * Multiline description
 */
export interface TypeA {
  name: string | null
  size: number | null
}

/**
 * Another more complex type
 */
export interface TypeB {
  nested: (TypeA | null)[] | null
}

export interface field1Args {}

export interface field2Args {}
"
`;

